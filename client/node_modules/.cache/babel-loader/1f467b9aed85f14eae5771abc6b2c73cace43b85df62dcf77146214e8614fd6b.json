{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport CartReducer from './slices/cartSlice';\nimport authReducer from \"./slices/authSlice\";\nimport userReducer from \"./slices/userSlice\";\nimport storage from 'redux-persist/lib/storage';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nconst persistConfig = {\n  key: 'root',\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, CartReducer);\n\n// const store = configureStore({\n//   reducer: {\n//     auth: authReducer,\n//     user: userReducer,\n//     cart:persistedReducer\n//   },\n// });\n\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n    user: userReducer,\n    cart: persistedReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport const persistor = persistStore(store);","map":{"version":3,"names":["configureStore","CartReducer","authReducer","userReducer","storage","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","key","persistedReducer","store","reducer","auth","user","cart","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["/home/shruti-mokariya/Desktop/crowncloth/client/src/store.ts"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport CartReducer from './slices/cartSlice'\nimport authReducer from \"./slices/authSlice\";\nimport userReducer from \"./slices/userSlice\";\nimport storage from 'redux-persist/lib/storage';\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, CartReducer)\n\n// const store = configureStore({\n//   reducer: {\n//     auth: authReducer,\n//     user: userReducer,\n//     cart:persistedReducer\n//   },\n// });\n\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n    user: userReducer,\n    cart:persistedReducer\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    })\n})\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\n\n\nexport const persistor = persistStore(store)\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,OAAOC,OAAO,MAAM,2BAA2B;AAE/C,SACEC,YAAY,EACZC,cAAc,EACdC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,QACH,eAAe;AAEtB,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXV;AACF,CAAC;AAED,MAAMW,gBAAgB,GAAGT,cAAc,CAACO,aAAa,EAAEZ,WAAW,CAAC;;AAEnE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMe,KAAK,GAAGhB,cAAc,CAAC;EAClCiB,OAAO,EAAE;IACPC,IAAI,EAAEhB,WAAW;IACjBiB,IAAI,EAAEhB,WAAW;IACjBiB,IAAI,EAACL;EACP,CAAC;EACDM,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAACjB,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACpE;EACF,CAAC;AACL,CAAC,CAAC;AAOF,OAAO,MAAMa,SAAS,GAAGpB,YAAY,CAACW,KAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}