{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { GET_ALL_PRODUCT, GET_NUMBER_CART, ADD_CART, DECREASE_QUANTITY, INCREASE_QUANTITY, DELETE_CART } from '../actions/action';\nconst initProduct = {\n  numberCart: 0,\n  Carts: [],\n  _products: []\n};\nfunction todoProduct(state = initProduct, action) {\n  switch (action.type) {\n    case GET_ALL_PRODUCT:\n      return {\n        ...state,\n        _products: action.payload\n      };\n    case GET_NUMBER_CART:\n      return {\n        ...state\n      };\n    case ADD_CART:\n      if (state.numberCart === 0) {\n        let cart = {\n          id: action.payload.id,\n          quantity: 1,\n          name: action.payload.name,\n          image: action.payload.image,\n          price: action.payload.price\n        };\n        state.Carts.push(cart);\n      } else {\n        let check = false;\n        state.Carts.map((item, key) => {\n          if (item.id === action.payload.id) {\n            state.Carts[key].quantity++;\n            check = true;\n          }\n        });\n        if (!check) {\n          let _cart = {\n            id: action.payload.id,\n            quantity: 1,\n            name: action.payload.name,\n            image: action.payload.image,\n            price: action.payload.price\n          };\n          state.Carts.push(_cart);\n        }\n      }\n      return {\n        ...state,\n        numberCart: state.numberCart + 1\n      };\n    case INCREASE_QUANTITY:\n      state.numberCart++;\n      state.Carts[action.payload].quantity++;\n      return {\n        ...state\n      };\n    case DECREASE_QUANTITY:\n      let quantity = state.Carts[action.payload].quantity;\n      if (quantity > 1) {\n        state.numberCart--;\n        state.Carts[action.payload].quantity--;\n      }\n      return {\n        ...state\n      };\n    case DELETE_CART:\n      let quantity_ = state.Carts[action.payload].quantity;\n      return {\n        ...state,\n        numberCart: state.numberCart - quantity_,\n        Carts: state.Carts.filter(item => {\n          return item.id != state.Carts[action.payload].id;\n        })\n      };\n    default:\n      return state;\n  }\n}\nconst ShopApp = combineReducers({\n  _todoProduct: todoProduct\n});\nexport default ShopApp;","map":{"version":3,"names":["combineReducers","GET_ALL_PRODUCT","GET_NUMBER_CART","ADD_CART","DECREASE_QUANTITY","INCREASE_QUANTITY","DELETE_CART","initProduct","numberCart","Carts","_products","todoProduct","state","action","type","payload","cart","id","quantity","name","image","price","push","check","map","item","key","_cart","quantity_","filter","ShopApp","_todoProduct"],"sources":["/home/shruti-mokariya/Desktop/crowncloth/client/src/slices/cartSlice.ts"],"sourcesContent":["import { combineReducers } from 'redux';\nimport {GET_ALL_PRODUCT,GET_NUMBER_CART,ADD_CART, DECREASE_QUANTITY, INCREASE_QUANTITY, DELETE_CART} from  '../actions/action';\n\ninterface Data{\n  id: number\n  quantity: number\n  name: string\n  image: string\n  price: number\n}\n\ninterface Productint{\n    numberCart:number\n    Carts:Array<Data>\n    _products:Array<Data>\n}\n\nconst initProduct:Productint = {\n    numberCart:0,\n    Carts:[],\n    _products:[]\n}\n\nfunction todoProduct(state = initProduct,action:any){\n    switch(action.type){\n        case GET_ALL_PRODUCT: \n            return{\n                ...state,\n                _products:action.payload\n            }\n        case GET_NUMBER_CART:\n                return{\n                    ...state\n                }\n        case ADD_CART:\n            if(state.numberCart===0){\n                let cart:Data = {\n                    id:action.payload.id,\n                    quantity:1,\n                    name:action.payload.name,\n                    image:action.payload.image,\n                    price:action.payload.price\n                } \n                state.Carts.push(cart); \n            }\n            else{\n                let check = false;\n                state.Carts.map((item,key)=>{\n                    if(item.id===action.payload.id){\n                        state.Carts[key].quantity++;\n                        check=true;\n                    }\n                });\n                if(!check){\n                    let _cart = {\n                        id:action.payload.id,\n                        quantity:1,\n                        name:action.payload.name,\n                        image:action.payload.image,\n                        price:action.payload.price\n                    }\n                    state.Carts.push(_cart);\n                }\n            }\n            return{\n                ...state,\n                numberCart:state.numberCart+1\n            }\n            case INCREASE_QUANTITY:\n                state.numberCart++\n                state.Carts[action.payload].quantity++;\n              \n               return{\n                   ...state\n               }\n            case DECREASE_QUANTITY:\n                let quantity = state.Carts[action.payload].quantity;\n                if(quantity>1){\n                    state.numberCart--;\n                    state.Carts[action.payload].quantity--;\n                }\n              \n                return{\n                    ...state\n                }\n            case DELETE_CART:\n                let quantity_ = state.Carts[action.payload].quantity;\n                return{\n                    ...state,\n                    numberCart:state.numberCart - quantity_,\n                    Carts:state.Carts.filter(item=>{\n                        return item.id!=state.Carts[action.payload].id\n                    })\n                   \n                }\n        default:\n            return state;\n    }\n}\nconst ShopApp = combineReducers({\n    _todoProduct:todoProduct\n});\nexport default ShopApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}