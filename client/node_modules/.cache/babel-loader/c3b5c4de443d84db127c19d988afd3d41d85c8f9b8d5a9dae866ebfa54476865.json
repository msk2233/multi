{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axiosInstance from \"../api/axiosInstance\";\ni;\nconst initialState = {\n  basicUserInfo: localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null,\n  userProfileData: undefined,\n  status: \"idle\",\n  error: null\n};\nexport const login = createAsyncThunk(\"login\", async data => {\n  const response = await axiosInstance.post(\"/login\", data);\n  const resData = response.data;\n  localStorage.setItem(\"userInfo\", JSON.stringify(resData));\n  return resData;\n});\nexport const register = createAsyncThunk(\"register\", async data => {\n  const response = await axiosInstance.post(\"/register\", data);\n  const resData = response.data;\n  localStorage.setItem(\"userInfo\", JSON.stringify(resData));\n  return resData;\n});\nexport const logout = createAsyncThunk(\"logout\", async () => {\n  const response = await axiosInstance.post(\"/logout\", {});\n  const resData = response.data;\n  localStorage.removeItem(\"userInfo\");\n  return resData;\n});\nexport const getUser = createAsyncThunk(\"users/profile\", async userId => {\n  const response = await axiosInstance.get(`/users/${userId}`);\n  return response.data;\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder\n    // .addCase(login.pending, (state) => {\n    //   state.status = \"loading\";\n    //   state.error = null;\n    // })\n    .addCase(login.fulfilled, (state, action) => {\n      state.status = \"idle\";\n      state.basicUserInfo = action.payload;\n    });\n    // .addCase(login.rejected, (state, action) => {\n    //   state.status = \"failed\";\n    //   state.error = action.error.message || \"Login failed\";\n    // })\n\n    // .addCase(register.pending, (state) => {\n    //   state.status = \"loading\";\n    //   state.error = null;\n    // })\n    // .addCase(\n    //   register.fulfilled,\n    //   (state, action: PayloadAction<UserBasicInfo>) => {\n    //     state.status = \"idle\";\n    //     state.basicUserInfo = action.payload;\n    //   }\n    // )\n    // .addCase(register.rejected, (state, action) => {\n    //   state.status = \"failed\";\n    //   state.error = action.error.message || \"Registration failed\";\n    // })\n\n    // .addCase(logout.pending, (state) => {\n    //   state.status = \"loading\";\n    //   state.error = null;\n    // })\n    // .addCase(logout.fulfilled, (state, action) => {\n    //   state.status = \"idle\";\n    //   state.basicUserInfo = null;\n    // })\n    // .addCase(logout.rejected, (state, action) => {\n    //   state.status = \"failed\";\n    //   state.error = action.error.message || \"Logout failed\";\n    // })\n\n    // .addCase(getUser.pending, (state) => {\n    //   state.status = \"loading\";\n    //   state.error = null;\n    // })\n    // .addCase(getUser.fulfilled, (state, action) => {\n    //   state.status = \"idle\";\n    //   state.userProfileData = action.payload;\n    // })\n    // .addCase(getUser.rejected, (state, action) => {\n    //   state.status = \"failed\";\n    //   state.error = action.error.message || \"Get user profile data failed\";\n    // });\n  }\n});\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axiosInstance","i","initialState","basicUserInfo","localStorage","getItem","JSON","parse","userProfileData","undefined","status","error","login","data","response","post","resData","setItem","stringify","register","logout","removeItem","getUser","userId","get","authSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","reducer"],"sources":["/home/shruti-mokariya/Desktop/crowncloth/client/src/slices/authSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\nimport axiosInstance from \"../api/axiosInstance\";\ni\n\ntype User = {\n  email: string;\n  password: string;\n};\n\ntype NewUser = User & {\n  name: string;\n};\n\ntype UserBasicInfo = {\n  id: string;\n  name: string;\n  email: string;\n};\n\ntype UserProfileData = {\n  name: string;\n  email: string;\n};\n\ntype AuthApiState = {\n  basicUserInfo?: UserBasicInfo | null;\n  userProfileData?: UserProfileData | null;\n  status: \"idle\" | \"loading\" | \"failed\";\n  error: string | null;\n};\n\nconst initialState: AuthApiState = {\n  basicUserInfo: localStorage.getItem(\"userInfo\")\n    ? JSON.parse(localStorage.getItem(\"userInfo\") as string)\n    : null,\n  userProfileData: undefined,\n  status: \"idle\",\n  error: null,\n};\n\nexport const login = createAsyncThunk(\"login\", async (data: User) => {\n  const response = await axiosInstance.post(\"/login\", data);\n  const resData = response.data;\n  localStorage.setItem(\"userInfo\", JSON.stringify(resData));\n  return resData;\n});\n\nexport const register = createAsyncThunk(\"register\", async (data: NewUser) => {\n  const response = await axiosInstance.post(\n    \"/register\",\n    data\n  );\n  const resData = response.data;\n\n  localStorage.setItem(\"userInfo\", JSON.stringify(resData));\n\n  return resData;\n});\n\nexport const logout = createAsyncThunk(\"logout\", async () => {\n  const response = await axiosInstance.post(\"/logout\", {});\n  const resData = response.data;\n  localStorage.removeItem(\"userInfo\");\n  return resData;\n});\nexport const getUser = createAsyncThunk(\n  \"users/profile\",\n  async (userId: string) => {\n    const response = await axiosInstance.get(\n      `/users/${userId}`\n    );\n    return response.data;\n  }\n);\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      // .addCase(login.pending, (state) => {\n      //   state.status = \"loading\";\n      //   state.error = null;\n      // })\n      .addCase(\n        login.fulfilled,\n        (state, action: PayloadAction<UserBasicInfo>) => {\n          state.status = \"idle\";\n          state.basicUserInfo = action.payload;\n        }\n      )\n      // .addCase(login.rejected, (state, action) => {\n      //   state.status = \"failed\";\n      //   state.error = action.error.message || \"Login failed\";\n      // })\n\n      // .addCase(register.pending, (state) => {\n      //   state.status = \"loading\";\n      //   state.error = null;\n      // })\n      // .addCase(\n      //   register.fulfilled,\n      //   (state, action: PayloadAction<UserBasicInfo>) => {\n      //     state.status = \"idle\";\n      //     state.basicUserInfo = action.payload;\n      //   }\n      // )\n      // .addCase(register.rejected, (state, action) => {\n      //   state.status = \"failed\";\n      //   state.error = action.error.message || \"Registration failed\";\n      // })\n\n      // .addCase(logout.pending, (state) => {\n      //   state.status = \"loading\";\n      //   state.error = null;\n      // })\n      // .addCase(logout.fulfilled, (state, action) => {\n      //   state.status = \"idle\";\n      //   state.basicUserInfo = null;\n      // })\n      // .addCase(logout.rejected, (state, action) => {\n      //   state.status = \"failed\";\n      //   state.error = action.error.message || \"Logout failed\";\n      // })\n\n      // .addCase(getUser.pending, (state) => {\n      //   state.status = \"loading\";\n      //   state.error = null;\n      // })\n      // .addCase(getUser.fulfilled, (state, action) => {\n      //   state.status = \"idle\";\n      //   state.userProfileData = action.payload;\n      // })\n      // .addCase(getUser.rejected, (state, action) => {\n      //   state.status = \"failed\";\n      //   state.error = action.error.message || \"Get user profile data failed\";\n      // });\n  },\n});\n\nexport default authSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAuB,kBAAkB;AAC/E,OAAOC,aAAa,MAAM,sBAAsB;AAChDC,CAAC;AA6BD,MAAMC,YAA0B,GAAG;EACjCC,aAAa,EAAEC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GAC3CC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAW,CAAC,GACtD,IAAI;EACRG,eAAe,EAAEC,SAAS;EAC1BC,MAAM,EAAE,MAAM;EACdC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,KAAK,GAAGb,gBAAgB,CAAC,OAAO,EAAE,MAAOc,IAAU,IAAK;EACnE,MAAMC,QAAQ,GAAG,MAAMd,aAAa,CAACe,IAAI,CAAC,QAAQ,EAAEF,IAAI,CAAC;EACzD,MAAMG,OAAO,GAAGF,QAAQ,CAACD,IAAI;EAC7BT,YAAY,CAACa,OAAO,CAAC,UAAU,EAAEX,IAAI,CAACY,SAAS,CAACF,OAAO,CAAC,CAAC;EACzD,OAAOA,OAAO;AAChB,CAAC,CAAC;AAEF,OAAO,MAAMG,QAAQ,GAAGpB,gBAAgB,CAAC,UAAU,EAAE,MAAOc,IAAa,IAAK;EAC5E,MAAMC,QAAQ,GAAG,MAAMd,aAAa,CAACe,IAAI,CACvC,WAAW,EACXF,IACF,CAAC;EACD,MAAMG,OAAO,GAAGF,QAAQ,CAACD,IAAI;EAE7BT,YAAY,CAACa,OAAO,CAAC,UAAU,EAAEX,IAAI,CAACY,SAAS,CAACF,OAAO,CAAC,CAAC;EAEzD,OAAOA,OAAO;AAChB,CAAC,CAAC;AAEF,OAAO,MAAMI,MAAM,GAAGrB,gBAAgB,CAAC,QAAQ,EAAE,YAAY;EAC3D,MAAMe,QAAQ,GAAG,MAAMd,aAAa,CAACe,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;EACxD,MAAMC,OAAO,GAAGF,QAAQ,CAACD,IAAI;EAC7BT,YAAY,CAACiB,UAAU,CAAC,UAAU,CAAC;EACnC,OAAOL,OAAO;AAChB,CAAC,CAAC;AACF,OAAO,MAAMM,OAAO,GAAGvB,gBAAgB,CACrC,eAAe,EACf,MAAOwB,MAAc,IAAK;EACxB,MAAMT,QAAQ,GAAG,MAAMd,aAAa,CAACwB,GAAG,CACtC,UAAUD,MAAM,EAClB,CAAC;EACD,OAAOT,QAAQ,CAACD,IAAI;AACtB,CACF,CAAC;AAED,MAAMY,SAAS,GAAG3B,WAAW,CAAC;EAC5B4B,IAAI,EAAE,MAAM;EACZxB,YAAY;EACZyB,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA;IACE;IACA;IACA;IACA;IAAA,CACCC,OAAO,CACNlB,KAAK,CAACmB,SAAS,EACf,CAACC,KAAK,EAAEC,MAAoC,KAAK;MAC/CD,KAAK,CAACtB,MAAM,GAAG,MAAM;MACrBsB,KAAK,CAAC7B,aAAa,GAAG8B,MAAM,CAACC,OAAO;IACtC,CACF,CAAC;IACD;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ;AACF,CAAC,CAAC;AAEF,eAAeT,SAAS,CAACU,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}